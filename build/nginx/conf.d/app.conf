server {
    listen       80;
    server_name  app;
    root /app/public;

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    # DEV
    # TODO:
    # This rule should only be placed on your development environment
    # In production, don't include this
    location ~ ^/index\.php(/|$) {
        fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param APP_ENV $arg_APP_ENV if_not_empty;
    }

    # PROD
    #location ~ ^/index\.php(/|$) {
    #    fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;
    #    fastcgi_split_path_info ^(.+\.php)(/.*)$;
    #    include fastcgi_params;
    #    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    #    fastcgi_param DOCUMENT_ROOT $realpath_root;
    #    fastcgi_param APP_ENV prod;
    #    internal;
    #}

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    ## Static files are served directly.
    location ~* \.(?:css|gif|htc|ico|js|jpe?g|png|swf)$ {
        expires max;
        log_not_found off;
        ## No need to bleed constant updates. Send the all shebang in one
        ## fell swoop.
        tcp_nodelay off;
        ## Set the OS file cache.
        open_file_cache max=1000 inactive=120s;
        open_file_cache_valid 45s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;
    }

    location /nginx_status {
        stub_status on;
    }
}
